// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: pkg/pb/pool_transactions.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Is User Owner of Pool
type IsUserOwnerOfPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PoolId string `protobuf:"bytes,2,opt,name=poolId,proto3" json:"poolId,omitempty"`
}

func (x *IsUserOwnerOfPoolRequest) Reset() {
	*x = IsUserOwnerOfPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserOwnerOfPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserOwnerOfPoolRequest) ProtoMessage() {}

func (x *IsUserOwnerOfPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserOwnerOfPoolRequest.ProtoReflect.Descriptor instead.
func (*IsUserOwnerOfPoolRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{0}
}

func (x *IsUserOwnerOfPoolRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IsUserOwnerOfPoolRequest) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

type IsUserOwnerOfPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOwner bool  `protobuf:"varint,1,opt,name=isOwner,proto3" json:"isOwner,omitempty"`
	Status  int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *IsUserOwnerOfPoolResponse) Reset() {
	*x = IsUserOwnerOfPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserOwnerOfPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserOwnerOfPoolResponse) ProtoMessage() {}

func (x *IsUserOwnerOfPoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserOwnerOfPoolResponse.ProtoReflect.Descriptor instead.
func (*IsUserOwnerOfPoolResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{1}
}

func (x *IsUserOwnerOfPoolResponse) GetIsOwner() bool {
	if x != nil {
		return x.IsOwner
	}
	return false
}

func (x *IsUserOwnerOfPoolResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// Create Pool Invitation
type CreatePoolInvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId string `protobuf:"bytes,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Role   string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *CreatePoolInvitationRequest) Reset() {
	*x = CreatePoolInvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePoolInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePoolInvitationRequest) ProtoMessage() {}

func (x *CreatePoolInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePoolInvitationRequest.ProtoReflect.Descriptor instead.
func (*CreatePoolInvitationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePoolInvitationRequest) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *CreatePoolInvitationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreatePoolInvitationRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type CreatePoolInvitationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvitationId string                 `protobuf:"bytes,1,opt,name=invitationId,proto3" json:"invitationId,omitempty"`
	InviteeId    string                 `protobuf:"bytes,2,opt,name=inviteeId,proto3" json:"inviteeId,omitempty"`
	PoolId       string                 `protobuf:"bytes,3,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Status       int32                  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *CreatePoolInvitationResponse) Reset() {
	*x = CreatePoolInvitationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePoolInvitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePoolInvitationResponse) ProtoMessage() {}

func (x *CreatePoolInvitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePoolInvitationResponse.ProtoReflect.Descriptor instead.
func (*CreatePoolInvitationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePoolInvitationResponse) GetInvitationId() string {
	if x != nil {
		return x.InvitationId
	}
	return ""
}

func (x *CreatePoolInvitationResponse) GetInviteeId() string {
	if x != nil {
		return x.InviteeId
	}
	return ""
}

func (x *CreatePoolInvitationResponse) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *CreatePoolInvitationResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreatePoolInvitationResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Create Pool Participant
type CreatePoolParticipantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId string `protobuf:"bytes,2,opt,name=poolId,proto3" json:"poolId,omitempty"`
}

func (x *CreatePoolParticipantRequest) Reset() {
	*x = CreatePoolParticipantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePoolParticipantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePoolParticipantRequest) ProtoMessage() {}

func (x *CreatePoolParticipantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePoolParticipantRequest.ProtoReflect.Descriptor instead.
func (*CreatePoolParticipantRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePoolParticipantRequest) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

type CreatePoolParticipantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParticipantId string                 `protobuf:"bytes,1,opt,name=participantId,proto3" json:"participantId,omitempty"`
	PoolId        string                 `protobuf:"bytes,3,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Role          string                 `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	JoinedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=joinedAt,proto3" json:"joinedAt,omitempty"`
	Status        int32                  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreatePoolParticipantResponse) Reset() {
	*x = CreatePoolParticipantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePoolParticipantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePoolParticipantResponse) ProtoMessage() {}

func (x *CreatePoolParticipantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePoolParticipantResponse.ProtoReflect.Descriptor instead.
func (*CreatePoolParticipantResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{5}
}

func (x *CreatePoolParticipantResponse) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *CreatePoolParticipantResponse) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *CreatePoolParticipantResponse) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CreatePoolParticipantResponse) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

func (x *CreatePoolParticipantResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// Delete Pool
type DeletePoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId string `protobuf:"bytes,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
}

func (x *DeletePoolRequest) Reset() {
	*x = DeletePoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePoolRequest) ProtoMessage() {}

func (x *DeletePoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePoolRequest.ProtoReflect.Descriptor instead.
func (*DeletePoolRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{6}
}

func (x *DeletePoolRequest) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

type DeletePoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId string `protobuf:"bytes,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Status int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeletePoolResponse) Reset() {
	*x = DeletePoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePoolResponse) ProtoMessage() {}

func (x *DeletePoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePoolResponse.ProtoReflect.Descriptor instead.
func (*DeletePoolResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{7}
}

func (x *DeletePoolResponse) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *DeletePoolResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// Get Participant Pools
type GetUserPoolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetUserPoolsRequest) Reset() {
	*x = GetUserPoolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPoolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPoolsRequest) ProtoMessage() {}

func (x *GetUserPoolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPoolsRequest.ProtoReflect.Descriptor instead.
func (*GetUserPoolsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserPoolsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Pool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId       string         `protobuf:"bytes,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Poolname     string         `protobuf:"bytes,2,opt,name=poolname,proto3" json:"poolname,omitempty"`
	Description  string         `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	BalanceGoal  int32          `protobuf:"varint,4,opt,name=balanceGoal,proto3" json:"balanceGoal,omitempty"`
	Participants []*Participant `protobuf:"bytes,5,rep,name=participants,proto3" json:"participants,omitempty"`
	Transactions []*Transaction `protobuf:"bytes,6,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Status       int32          `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt    string         `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *Pool) Reset() {
	*x = Pool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pool) ProtoMessage() {}

func (x *Pool) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pool.ProtoReflect.Descriptor instead.
func (*Pool) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{9}
}

func (x *Pool) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *Pool) GetPoolname() string {
	if x != nil {
		return x.Poolname
	}
	return ""
}

func (x *Pool) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Pool) GetBalanceGoal() int32 {
	if x != nil {
		return x.BalanceGoal
	}
	return 0
}

func (x *Pool) GetParticipants() []*Participant {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *Pool) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Pool) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Pool) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type GetUserPoolsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pools  []*Pool `protobuf:"bytes,1,rep,name=pools,proto3" json:"pools,omitempty"`
	Status int32   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetUserPoolsResponse) Reset() {
	*x = GetUserPoolsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPoolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPoolsResponse) ProtoMessage() {}

func (x *GetUserPoolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPoolsResponse.ProtoReflect.Descriptor instead.
func (*GetUserPoolsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserPoolsResponse) GetPools() []*Pool {
	if x != nil {
		return x.Pools
	}
	return nil
}

func (x *GetUserPoolsResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// Remove Pool Participant
type RemovePoolParticipantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId        string `protobuf:"bytes,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
	ParticipantId string `protobuf:"bytes,2,opt,name=participantId,proto3" json:"participantId,omitempty"`
}

func (x *RemovePoolParticipantRequest) Reset() {
	*x = RemovePoolParticipantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePoolParticipantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePoolParticipantRequest) ProtoMessage() {}

func (x *RemovePoolParticipantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePoolParticipantRequest.ProtoReflect.Descriptor instead.
func (*RemovePoolParticipantRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{11}
}

func (x *RemovePoolParticipantRequest) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *RemovePoolParticipantRequest) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

type RemovePoolParticipantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParticipantId string `protobuf:"bytes,1,opt,name=participantId,proto3" json:"participantId,omitempty"`
	PoolId        string `protobuf:"bytes,2,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Status        int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RemovePoolParticipantResponse) Reset() {
	*x = RemovePoolParticipantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePoolParticipantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePoolParticipantResponse) ProtoMessage() {}

func (x *RemovePoolParticipantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePoolParticipantResponse.ProtoReflect.Descriptor instead.
func (*RemovePoolParticipantResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{12}
}

func (x *RemovePoolParticipantResponse) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *RemovePoolParticipantResponse) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *RemovePoolParticipantResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// Update Pool
type UpdatePoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId      string `protobuf:"bytes,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Poolname    string `protobuf:"bytes,2,opt,name=poolname,proto3" json:"poolname,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	BalanceGoal int32  `protobuf:"varint,4,opt,name=balanceGoal,proto3" json:"balanceGoal,omitempty"`
}

func (x *UpdatePoolRequest) Reset() {
	*x = UpdatePoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePoolRequest) ProtoMessage() {}

func (x *UpdatePoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePoolRequest.ProtoReflect.Descriptor instead.
func (*UpdatePoolRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{13}
}

func (x *UpdatePoolRequest) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *UpdatePoolRequest) GetPoolname() string {
	if x != nil {
		return x.Poolname
	}
	return ""
}

func (x *UpdatePoolRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdatePoolRequest) GetBalanceGoal() int32 {
	if x != nil {
		return x.BalanceGoal
	}
	return 0
}

type UpdatePoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Poolname    string `protobuf:"bytes,2,opt,name=poolname,proto3" json:"poolname,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	BalanceGoal int32  `protobuf:"varint,4,opt,name=balanceGoal,proto3" json:"balanceGoal,omitempty"`
	Status      int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt   string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *UpdatePoolResponse) Reset() {
	*x = UpdatePoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePoolResponse) ProtoMessage() {}

func (x *UpdatePoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePoolResponse.ProtoReflect.Descriptor instead.
func (*UpdatePoolResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{14}
}

func (x *UpdatePoolResponse) GetPoolname() string {
	if x != nil {
		return x.Poolname
	}
	return ""
}

func (x *UpdatePoolResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdatePoolResponse) GetBalanceGoal() int32 {
	if x != nil {
		return x.BalanceGoal
	}
	return 0
}

func (x *UpdatePoolResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdatePoolResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// Create Pool
type CreatePoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Poolname    string `protobuf:"bytes,1,opt,name=poolname,proto3" json:"poolname,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	BalanceGoal int32  `protobuf:"varint,3,opt,name=balanceGoal,proto3" json:"balanceGoal,omitempty"`
}

func (x *CreatePoolRequest) Reset() {
	*x = CreatePoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePoolRequest) ProtoMessage() {}

func (x *CreatePoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePoolRequest.ProtoReflect.Descriptor instead.
func (*CreatePoolRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{15}
}

func (x *CreatePoolRequest) GetPoolname() string {
	if x != nil {
		return x.Poolname
	}
	return ""
}

func (x *CreatePoolRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePoolRequest) GetBalanceGoal() int32 {
	if x != nil {
		return x.BalanceGoal
	}
	return 0
}

type CreatePoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId      string `protobuf:"bytes,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Poolname    string `protobuf:"bytes,2,opt,name=poolname,proto3" json:"poolname,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	BalanceGoal int32  `protobuf:"varint,4,opt,name=balanceGoal,proto3" json:"balanceGoal,omitempty"`
	Status      int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt   string `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *CreatePoolResponse) Reset() {
	*x = CreatePoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePoolResponse) ProtoMessage() {}

func (x *CreatePoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePoolResponse.ProtoReflect.Descriptor instead.
func (*CreatePoolResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{16}
}

func (x *CreatePoolResponse) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *CreatePoolResponse) GetPoolname() string {
	if x != nil {
		return x.Poolname
	}
	return ""
}

func (x *CreatePoolResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePoolResponse) GetBalanceGoal() int32 {
	if x != nil {
		return x.BalanceGoal
	}
	return 0
}

func (x *CreatePoolResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreatePoolResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// Get Pool by ID
type GetPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId string `protobuf:"bytes,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
}

func (x *GetPoolRequest) Reset() {
	*x = GetPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolRequest) ProtoMessage() {}

func (x *GetPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolRequest.ProtoReflect.Descriptor instead.
func (*GetPoolRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{17}
}

func (x *GetPoolRequest) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

type Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParticipantId string                 `protobuf:"bytes,1,opt,name=participantId,proto3" json:"participantId,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	PoolId        string                 `protobuf:"bytes,3,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Role          string                 `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	JoinedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=joinedAt,proto3" json:"joinedAt,omitempty"`
	Status        int32                  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *Participant) Reset() {
	*x = Participant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{18}
}

func (x *Participant) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *Participant) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Participant) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *Participant) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Participant) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

func (x *Participant) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Participant) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string                 `protobuf:"bytes,1,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	FromAccountId string                 `protobuf:"bytes,2,opt,name=fromAccountId,proto3" json:"fromAccountId,omitempty"`
	ToAccountId   string                 `protobuf:"bytes,3,opt,name=toAccountId,proto3" json:"toAccountId,omitempty"`
	Amount        float32                `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{19}
}

func (x *Transaction) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *Transaction) GetFromAccountId() string {
	if x != nil {
		return x.FromAccountId
	}
	return ""
}

func (x *Transaction) GetToAccountId() string {
	if x != nil {
		return x.ToAccountId
	}
	return ""
}

func (x *Transaction) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Transaction) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Transaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId       string         `protobuf:"bytes,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Poolname     string         `protobuf:"bytes,2,opt,name=poolname,proto3" json:"poolname,omitempty"`
	Description  string         `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	BalanceGoal  int32          `protobuf:"varint,4,opt,name=balanceGoal,proto3" json:"balanceGoal,omitempty"`
	Participants []*Participant `protobuf:"bytes,5,rep,name=participants,proto3" json:"participants,omitempty"`
	Transactions []*Transaction `protobuf:"bytes,6,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Status       int32          `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt    string         `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *GetPoolResponse) Reset() {
	*x = GetPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolResponse) ProtoMessage() {}

func (x *GetPoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolResponse.ProtoReflect.Descriptor instead.
func (*GetPoolResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{20}
}

func (x *GetPoolResponse) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *GetPoolResponse) GetPoolname() string {
	if x != nil {
		return x.Poolname
	}
	return ""
}

func (x *GetPoolResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetPoolResponse) GetBalanceGoal() int32 {
	if x != nil {
		return x.BalanceGoal
	}
	return 0
}

func (x *GetPoolResponse) GetParticipants() []*Participant {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *GetPoolResponse) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *GetPoolResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetPoolResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// Get Pool Balance
type GetPoolBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId string `protobuf:"bytes,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
}

func (x *GetPoolBalanceRequest) Reset() {
	*x = GetPoolBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoolBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolBalanceRequest) ProtoMessage() {}

func (x *GetPoolBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetPoolBalanceRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{21}
}

func (x *GetPoolBalanceRequest) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

type GetPoolBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance float32 `protobuf:"fixed32,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Status  int32   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetPoolBalanceResponse) Reset() {
	*x = GetPoolBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoolBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolBalanceResponse) ProtoMessage() {}

func (x *GetPoolBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetPoolBalanceResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{22}
}

func (x *GetPoolBalanceResponse) GetBalance() float32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *GetPoolBalanceResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// Get User Balance
type GetUserBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetUserBalanceRequest) Reset() {
	*x = GetUserBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceRequest) ProtoMessage() {}

func (x *GetUserBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetUserBalanceRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{23}
}

func (x *GetUserBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance float32 `protobuf:"fixed32,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Status  int32   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetUserBalanceResponse) Reset() {
	*x = GetUserBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceResponse) ProtoMessage() {}

func (x *GetUserBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetUserBalanceResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{24}
}

func (x *GetUserBalanceResponse) GetBalance() float32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *GetUserBalanceResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// Send Payment to User
type SendPaymentToUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiverUserId string  `protobuf:"bytes,2,opt,name=receiverUserId,proto3" json:"receiverUserId,omitempty"`
	Amount         float32 `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Description    string  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *SendPaymentToUserRequest) Reset() {
	*x = SendPaymentToUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPaymentToUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPaymentToUserRequest) ProtoMessage() {}

func (x *SendPaymentToUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPaymentToUserRequest.ProtoReflect.Descriptor instead.
func (*SendPaymentToUserRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{25}
}

func (x *SendPaymentToUserRequest) GetReceiverUserId() string {
	if x != nil {
		return x.ReceiverUserId
	}
	return ""
}

func (x *SendPaymentToUserRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SendPaymentToUserRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type SendPaymentToUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldBalance  float32 `protobuf:"fixed32,1,opt,name=oldBalance,proto3" json:"oldBalance,omitempty"`
	NewBalance  float32 `protobuf:"fixed32,2,opt,name=newBalance,proto3" json:"newBalance,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status      int32   `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SendPaymentToUserResponse) Reset() {
	*x = SendPaymentToUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPaymentToUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPaymentToUserResponse) ProtoMessage() {}

func (x *SendPaymentToUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPaymentToUserResponse.ProtoReflect.Descriptor instead.
func (*SendPaymentToUserResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{26}
}

func (x *SendPaymentToUserResponse) GetOldBalance() float32 {
	if x != nil {
		return x.OldBalance
	}
	return 0
}

func (x *SendPaymentToUserResponse) GetNewBalance() float32 {
	if x != nil {
		return x.NewBalance
	}
	return 0
}

func (x *SendPaymentToUserResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SendPaymentToUserResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// Send Payment to Pool
type SendPaymentToPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId      string  `protobuf:"bytes,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Amount      float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *SendPaymentToPoolRequest) Reset() {
	*x = SendPaymentToPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPaymentToPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPaymentToPoolRequest) ProtoMessage() {}

func (x *SendPaymentToPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPaymentToPoolRequest.ProtoReflect.Descriptor instead.
func (*SendPaymentToPoolRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{27}
}

func (x *SendPaymentToPoolRequest) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *SendPaymentToPoolRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SendPaymentToPoolRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type SendPaymentToPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldBalance  float32 `protobuf:"fixed32,1,opt,name=oldBalance,proto3" json:"oldBalance,omitempty"`
	NewBalance  float32 `protobuf:"fixed32,2,opt,name=newBalance,proto3" json:"newBalance,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status      int32   `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SendPaymentToPoolResponse) Reset() {
	*x = SendPaymentToPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPaymentToPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPaymentToPoolResponse) ProtoMessage() {}

func (x *SendPaymentToPoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPaymentToPoolResponse.ProtoReflect.Descriptor instead.
func (*SendPaymentToPoolResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{28}
}

func (x *SendPaymentToPoolResponse) GetOldBalance() float32 {
	if x != nil {
		return x.OldBalance
	}
	return 0
}

func (x *SendPaymentToPoolResponse) GetNewBalance() float32 {
	if x != nil {
		return x.NewBalance
	}
	return 0
}

func (x *SendPaymentToPoolResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SendPaymentToPoolResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// Get User Account Overview
type GetUserAccountOverviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetUserAccountOverviewRequest) Reset() {
	*x = GetUserAccountOverviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAccountOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAccountOverviewRequest) ProtoMessage() {}

func (x *GetUserAccountOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAccountOverviewRequest.ProtoReflect.Descriptor instead.
func (*GetUserAccountOverviewRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{29}
}

func (x *GetUserAccountOverviewRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserAccountOverviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance          float32                `protobuf:"fixed32,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Transactions     []*GalileoTransactions `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
	TransactionCount int32                  `protobuf:"varint,3,opt,name=transactionCount,proto3" json:"transactionCount,omitempty"`
	Status           int32                  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetUserAccountOverviewResponse) Reset() {
	*x = GetUserAccountOverviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAccountOverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAccountOverviewResponse) ProtoMessage() {}

func (x *GetUserAccountOverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAccountOverviewResponse.ProtoReflect.Descriptor instead.
func (*GetUserAccountOverviewResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{30}
}

func (x *GetUserAccountOverviewResponse) GetBalance() float32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *GetUserAccountOverviewResponse) GetTransactions() []*GalileoTransactions {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *GetUserAccountOverviewResponse) GetTransactionCount() int32 {
	if x != nil {
		return x.TransactionCount
	}
	return 0
}

func (x *GetUserAccountOverviewResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GalileoTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PmtRefNo           string  `protobuf:"bytes,1,opt,name=pmt_ref_no,json=pmtRefNo,proto3" json:"pmt_ref_no,omitempty"`
	ActId              string  `protobuf:"bytes,2,opt,name=act_id,json=actId,proto3" json:"act_id,omitempty"`
	ActType            string  `protobuf:"bytes,3,opt,name=act_type,json=actType,proto3" json:"act_type,omitempty"`
	Mcc                string  `protobuf:"bytes,4,opt,name=mcc,proto3" json:"mcc,omitempty"`
	PostTs             string  `protobuf:"bytes,5,opt,name=post_ts,json=postTs,proto3" json:"post_ts,omitempty"`
	Amt                string  `protobuf:"bytes,6,opt,name=amt,proto3" json:"amt,omitempty"`
	Details            string  `protobuf:"bytes,7,opt,name=details,proto3" json:"details,omitempty"`
	Description        string  `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	SourceId           string  `protobuf:"bytes,9,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	BalId              string  `protobuf:"bytes,10,opt,name=bal_id,json=balId,proto3" json:"bal_id,omitempty"`
	ProdId             string  `protobuf:"bytes,11,opt,name=prod_id,json=prodId,proto3" json:"prod_id,omitempty"`
	AuthTs             string  `protobuf:"bytes,12,opt,name=auth_ts,json=authTs,proto3" json:"auth_ts,omitempty"`
	TransCode          string  `protobuf:"bytes,13,opt,name=trans_code,json=transCode,proto3" json:"trans_code,omitempty"`
	AchTransactionId   string  `protobuf:"bytes,14,opt,name=ach_transaction_id,json=achTransactionId,proto3" json:"ach_transaction_id,omitempty"`
	ExternalTransId    string  `protobuf:"bytes,15,opt,name=external_trans_id,json=externalTransId,proto3" json:"external_trans_id,omitempty"`
	OriginalAuthId     string  `protobuf:"bytes,16,opt,name=original_auth_id,json=originalAuthId,proto3" json:"original_auth_id,omitempty"`
	NetworkId          string  `protobuf:"bytes,17,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	LocalAmt           string  `protobuf:"bytes,18,opt,name=local_amt,json=localAmt,proto3" json:"local_amt,omitempty"`
	LocalCurrCode      string  `protobuf:"bytes,19,opt,name=local_curr_code,json=localCurrCode,proto3" json:"local_curr_code,omitempty"`
	SettleAmt          string  `protobuf:"bytes,20,opt,name=settle_amt,json=settleAmt,proto3" json:"settle_amt,omitempty"`
	SettleCurrCode     string  `protobuf:"bytes,21,opt,name=settle_curr_code,json=settleCurrCode,proto3" json:"settle_curr_code,omitempty"`
	BillingAmt         string  `protobuf:"bytes,22,opt,name=billing_amt,json=billingAmt,proto3" json:"billing_amt,omitempty"`
	BillingCurrCode    string  `protobuf:"bytes,23,opt,name=billing_curr_code,json=billingCurrCode,proto3" json:"billing_curr_code,omitempty"`
	IacTax             float32 `protobuf:"fixed32,24,opt,name=iac_tax,json=iacTax,proto3" json:"iac_tax,omitempty"`
	IvaTax             float32 `protobuf:"fixed32,25,opt,name=iva_tax,json=ivaTax,proto3" json:"iva_tax,omitempty"`
	FundingAccountPrn  string  `protobuf:"bytes,26,opt,name=funding_account_prn,json=fundingAccountPrn,proto3" json:"funding_account_prn,omitempty"`
	SpendingAccountPrn string  `protobuf:"bytes,27,opt,name=spending_account_prn,json=spendingAccountPrn,proto3" json:"spending_account_prn,omitempty"`
}

func (x *GalileoTransactions) Reset() {
	*x = GalileoTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalileoTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalileoTransactions) ProtoMessage() {}

func (x *GalileoTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalileoTransactions.ProtoReflect.Descriptor instead.
func (*GalileoTransactions) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{31}
}

func (x *GalileoTransactions) GetPmtRefNo() string {
	if x != nil {
		return x.PmtRefNo
	}
	return ""
}

func (x *GalileoTransactions) GetActId() string {
	if x != nil {
		return x.ActId
	}
	return ""
}

func (x *GalileoTransactions) GetActType() string {
	if x != nil {
		return x.ActType
	}
	return ""
}

func (x *GalileoTransactions) GetMcc() string {
	if x != nil {
		return x.Mcc
	}
	return ""
}

func (x *GalileoTransactions) GetPostTs() string {
	if x != nil {
		return x.PostTs
	}
	return ""
}

func (x *GalileoTransactions) GetAmt() string {
	if x != nil {
		return x.Amt
	}
	return ""
}

func (x *GalileoTransactions) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *GalileoTransactions) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GalileoTransactions) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *GalileoTransactions) GetBalId() string {
	if x != nil {
		return x.BalId
	}
	return ""
}

func (x *GalileoTransactions) GetProdId() string {
	if x != nil {
		return x.ProdId
	}
	return ""
}

func (x *GalileoTransactions) GetAuthTs() string {
	if x != nil {
		return x.AuthTs
	}
	return ""
}

func (x *GalileoTransactions) GetTransCode() string {
	if x != nil {
		return x.TransCode
	}
	return ""
}

func (x *GalileoTransactions) GetAchTransactionId() string {
	if x != nil {
		return x.AchTransactionId
	}
	return ""
}

func (x *GalileoTransactions) GetExternalTransId() string {
	if x != nil {
		return x.ExternalTransId
	}
	return ""
}

func (x *GalileoTransactions) GetOriginalAuthId() string {
	if x != nil {
		return x.OriginalAuthId
	}
	return ""
}

func (x *GalileoTransactions) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *GalileoTransactions) GetLocalAmt() string {
	if x != nil {
		return x.LocalAmt
	}
	return ""
}

func (x *GalileoTransactions) GetLocalCurrCode() string {
	if x != nil {
		return x.LocalCurrCode
	}
	return ""
}

func (x *GalileoTransactions) GetSettleAmt() string {
	if x != nil {
		return x.SettleAmt
	}
	return ""
}

func (x *GalileoTransactions) GetSettleCurrCode() string {
	if x != nil {
		return x.SettleCurrCode
	}
	return ""
}

func (x *GalileoTransactions) GetBillingAmt() string {
	if x != nil {
		return x.BillingAmt
	}
	return ""
}

func (x *GalileoTransactions) GetBillingCurrCode() string {
	if x != nil {
		return x.BillingCurrCode
	}
	return ""
}

func (x *GalileoTransactions) GetIacTax() float32 {
	if x != nil {
		return x.IacTax
	}
	return 0
}

func (x *GalileoTransactions) GetIvaTax() float32 {
	if x != nil {
		return x.IvaTax
	}
	return 0
}

func (x *GalileoTransactions) GetFundingAccountPrn() string {
	if x != nil {
		return x.FundingAccountPrn
	}
	return ""
}

func (x *GalileoTransactions) GetSpendingAccountPrn() string {
	if x != nil {
		return x.SpendingAccountPrn
	}
	return ""
}

// Get Pool Overview
type GetPoolOverviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId string `protobuf:"bytes,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
}

func (x *GetPoolOverviewRequest) Reset() {
	*x = GetPoolOverviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoolOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolOverviewRequest) ProtoMessage() {}

func (x *GetPoolOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolOverviewRequest.ProtoReflect.Descriptor instead.
func (*GetPoolOverviewRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{32}
}

func (x *GetPoolOverviewRequest) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

type GetPoolOverviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance          float32                `protobuf:"fixed32,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Transactions     []*GalileoTransactions `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
	TransactionCount int32                  `protobuf:"varint,3,opt,name=transactionCount,proto3" json:"transactionCount,omitempty"`
	Status           int32                  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetPoolOverviewResponse) Reset() {
	*x = GetPoolOverviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_pool_transactions_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoolOverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolOverviewResponse) ProtoMessage() {}

func (x *GetPoolOverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_pool_transactions_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolOverviewResponse.ProtoReflect.Descriptor instead.
func (*GetPoolOverviewResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_pool_transactions_proto_rawDescGZIP(), []int{33}
}

func (x *GetPoolOverviewResponse) GetBalance() float32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *GetPoolOverviewResponse) GetTransactions() []*GalileoTransactions {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *GetPoolOverviewResponse) GetTransactionCount() int32 {
	if x != nil {
		return x.TransactionCount
	}
	return 0
}

func (x *GetPoolOverviewResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_pkg_pb_pool_transactions_proto protoreflect.FileDescriptor

var file_pkg_pb_pool_transactions_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x18, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x4f, 0x66, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22,
	0x4d, 0x0a, 0x19, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x66,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x61,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x22, 0xca, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x36,
	0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0xc1, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x6a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2b, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2d, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xba, 0x02, 0x0a,
	0x04, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x41, 0x0a,
	0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x12, 0x41, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5c, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x05, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5c, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50,
	0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f,
	0x6f, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8b, 0x01, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f,
	0x6f, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f,
	0x6f, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x22, 0xaa, 0x01, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x6f, 0x61,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x73, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6f, 0x6f, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6f, 0x6f, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x22, 0xc2, 0x01, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x6f, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6f, 0x6f, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0xe5, 0x01, 0x0a, 0x0b,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x87, 0x02, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x72, 0x6f,
	0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc5, 0x02,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6f,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6f,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0c, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x2f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f,
	0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x2f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x7c, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x95, 0x01,
	0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f,
	0x6c, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x6f, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e,
	0x65, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x6e, 0x65, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6c, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x95, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x37, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x76, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x49, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x61, 0x6c, 0x69, 0x6c,
	0x65, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xf5, 0x06, 0x0a, 0x13, 0x47, 0x61, 0x6c, 0x69, 0x6c, 0x65, 0x6f, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x0a, 0x70, 0x6d, 0x74, 0x5f,
	0x72, 0x65, 0x66, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6d,
	0x74, 0x52, 0x65, 0x66, 0x4e, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x63, 0x63, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x63, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73,
	0x74, 0x54, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6d, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x61, 0x6d, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x62, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x62, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x54, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x63, 0x68, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x61, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x41, 0x6d, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x61, 0x6d, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x6d, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x43,
	0x75, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x6d, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x61, 0x63, 0x5f, 0x74, 0x61, 0x78, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x69, 0x61, 0x63, 0x54, 0x61, 0x78, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x76, 0x61, 0x5f, 0x74, 0x61, 0x78, 0x18, 0x19, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x69, 0x76, 0x61, 0x54, 0x61, 0x78, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6e, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x72, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6e, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6e, 0x22, 0x30, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x6f, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x49, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x61, 0x6c, 0x69, 0x6c, 0x65,
	0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32,
	0xc5, 0x0c, 0x0a, 0x17, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x23, 0x2e, 0x70, 0x6f, 0x6f, 0x6c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d,
	0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x7a, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x23, 0x2e, 0x70, 0x6f, 0x6f, 0x6c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x6f, 0x6c, 0x12, 0x20, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x15, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x6f, 0x6c,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x6f, 0x6c,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x6f, 0x6c, 0x12, 0x23, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x65, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x27, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x6f,
	0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x6f, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x20, 0x2e, 0x70, 0x6f, 0x6f,
	0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70,
	0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6e, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6e, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x2a, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2f, 0x2e, 0x70, 0x6f,
	0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x76, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70,
	0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x76,
	0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x65, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x27, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x6f,
	0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x11, 0x49, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x66, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x2a, 0x2e, 0x70,
	0x6f, 0x6f, 0x6c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x66, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x66, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_pb_pool_transactions_proto_rawDescOnce sync.Once
	file_pkg_pb_pool_transactions_proto_rawDescData = file_pkg_pb_pool_transactions_proto_rawDesc
)

func file_pkg_pb_pool_transactions_proto_rawDescGZIP() []byte {
	file_pkg_pb_pool_transactions_proto_rawDescOnce.Do(func() {
		file_pkg_pb_pool_transactions_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_pb_pool_transactions_proto_rawDescData)
	})
	return file_pkg_pb_pool_transactions_proto_rawDescData
}

var file_pkg_pb_pool_transactions_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_pkg_pb_pool_transactions_proto_goTypes = []interface{}{
	(*IsUserOwnerOfPoolRequest)(nil),       // 0: pooltransactions.IsUserOwnerOfPoolRequest
	(*IsUserOwnerOfPoolResponse)(nil),      // 1: pooltransactions.IsUserOwnerOfPoolResponse
	(*CreatePoolInvitationRequest)(nil),    // 2: pooltransactions.CreatePoolInvitationRequest
	(*CreatePoolInvitationResponse)(nil),   // 3: pooltransactions.CreatePoolInvitationResponse
	(*CreatePoolParticipantRequest)(nil),   // 4: pooltransactions.CreatePoolParticipantRequest
	(*CreatePoolParticipantResponse)(nil),  // 5: pooltransactions.CreatePoolParticipantResponse
	(*DeletePoolRequest)(nil),              // 6: pooltransactions.DeletePoolRequest
	(*DeletePoolResponse)(nil),             // 7: pooltransactions.DeletePoolResponse
	(*GetUserPoolsRequest)(nil),            // 8: pooltransactions.GetUserPoolsRequest
	(*Pool)(nil),                           // 9: pooltransactions.Pool
	(*GetUserPoolsResponse)(nil),           // 10: pooltransactions.GetUserPoolsResponse
	(*RemovePoolParticipantRequest)(nil),   // 11: pooltransactions.RemovePoolParticipantRequest
	(*RemovePoolParticipantResponse)(nil),  // 12: pooltransactions.RemovePoolParticipantResponse
	(*UpdatePoolRequest)(nil),              // 13: pooltransactions.UpdatePoolRequest
	(*UpdatePoolResponse)(nil),             // 14: pooltransactions.UpdatePoolResponse
	(*CreatePoolRequest)(nil),              // 15: pooltransactions.CreatePoolRequest
	(*CreatePoolResponse)(nil),             // 16: pooltransactions.CreatePoolResponse
	(*GetPoolRequest)(nil),                 // 17: pooltransactions.GetPoolRequest
	(*Participant)(nil),                    // 18: pooltransactions.Participant
	(*Transaction)(nil),                    // 19: pooltransactions.Transaction
	(*GetPoolResponse)(nil),                // 20: pooltransactions.GetPoolResponse
	(*GetPoolBalanceRequest)(nil),          // 21: pooltransactions.GetPoolBalanceRequest
	(*GetPoolBalanceResponse)(nil),         // 22: pooltransactions.GetPoolBalanceResponse
	(*GetUserBalanceRequest)(nil),          // 23: pooltransactions.GetUserBalanceRequest
	(*GetUserBalanceResponse)(nil),         // 24: pooltransactions.GetUserBalanceResponse
	(*SendPaymentToUserRequest)(nil),       // 25: pooltransactions.SendPaymentToUserRequest
	(*SendPaymentToUserResponse)(nil),      // 26: pooltransactions.SendPaymentToUserResponse
	(*SendPaymentToPoolRequest)(nil),       // 27: pooltransactions.SendPaymentToPoolRequest
	(*SendPaymentToPoolResponse)(nil),      // 28: pooltransactions.SendPaymentToPoolResponse
	(*GetUserAccountOverviewRequest)(nil),  // 29: pooltransactions.GetUserAccountOverviewRequest
	(*GetUserAccountOverviewResponse)(nil), // 30: pooltransactions.GetUserAccountOverviewResponse
	(*GalileoTransactions)(nil),            // 31: pooltransactions.GalileoTransactions
	(*GetPoolOverviewRequest)(nil),         // 32: pooltransactions.GetPoolOverviewRequest
	(*GetPoolOverviewResponse)(nil),        // 33: pooltransactions.GetPoolOverviewResponse
	(*timestamppb.Timestamp)(nil),          // 34: google.protobuf.Timestamp
}
var file_pkg_pb_pool_transactions_proto_depIdxs = []int32{
	34, // 0: pooltransactions.CreatePoolInvitationResponse.createdAt:type_name -> google.protobuf.Timestamp
	34, // 1: pooltransactions.CreatePoolParticipantResponse.joinedAt:type_name -> google.protobuf.Timestamp
	18, // 2: pooltransactions.Pool.participants:type_name -> pooltransactions.Participant
	19, // 3: pooltransactions.Pool.transactions:type_name -> pooltransactions.Transaction
	9,  // 4: pooltransactions.GetUserPoolsResponse.pools:type_name -> pooltransactions.Pool
	34, // 5: pooltransactions.Participant.joinedAt:type_name -> google.protobuf.Timestamp
	34, // 6: pooltransactions.Transaction.createdAt:type_name -> google.protobuf.Timestamp
	18, // 7: pooltransactions.GetPoolResponse.participants:type_name -> pooltransactions.Participant
	19, // 8: pooltransactions.GetPoolResponse.transactions:type_name -> pooltransactions.Transaction
	31, // 9: pooltransactions.GetUserAccountOverviewResponse.transactions:type_name -> pooltransactions.GalileoTransactions
	31, // 10: pooltransactions.GetPoolOverviewResponse.transactions:type_name -> pooltransactions.GalileoTransactions
	15, // 11: pooltransactions.PoolTransactionsService.CreatePool:input_type -> pooltransactions.CreatePoolRequest
	2,  // 12: pooltransactions.PoolTransactionsService.CreatePoolInvitation:input_type -> pooltransactions.CreatePoolInvitationRequest
	4,  // 13: pooltransactions.PoolTransactionsService.CreatePoolParticipant:input_type -> pooltransactions.CreatePoolParticipantRequest
	6,  // 14: pooltransactions.PoolTransactionsService.DeletePool:input_type -> pooltransactions.DeletePoolRequest
	8,  // 15: pooltransactions.PoolTransactionsService.GetUserPools:input_type -> pooltransactions.GetUserPoolsRequest
	17, // 16: pooltransactions.PoolTransactionsService.GetPool:input_type -> pooltransactions.GetPoolRequest
	11, // 17: pooltransactions.PoolTransactionsService.RemovePoolParticipant:input_type -> pooltransactions.RemovePoolParticipantRequest
	13, // 18: pooltransactions.PoolTransactionsService.UpdatePool:input_type -> pooltransactions.UpdatePoolRequest
	21, // 19: pooltransactions.PoolTransactionsService.GetPoolBalance:input_type -> pooltransactions.GetPoolBalanceRequest
	17, // 20: pooltransactions.PoolTransactionsService.GetPoolOverview:input_type -> pooltransactions.GetPoolRequest
	25, // 21: pooltransactions.PoolTransactionsService.SendPaymentToUser:input_type -> pooltransactions.SendPaymentToUserRequest
	27, // 22: pooltransactions.PoolTransactionsService.SendPaymentToPool:input_type -> pooltransactions.SendPaymentToPoolRequest
	29, // 23: pooltransactions.PoolTransactionsService.GetUserAccountOverview:input_type -> pooltransactions.GetUserAccountOverviewRequest
	23, // 24: pooltransactions.PoolTransactionsService.GetUserBalance:input_type -> pooltransactions.GetUserBalanceRequest
	0,  // 25: pooltransactions.PoolTransactionsService.IsUserOwnerOfPool:input_type -> pooltransactions.IsUserOwnerOfPoolRequest
	16, // 26: pooltransactions.PoolTransactionsService.CreatePool:output_type -> pooltransactions.CreatePoolResponse
	3,  // 27: pooltransactions.PoolTransactionsService.CreatePoolInvitation:output_type -> pooltransactions.CreatePoolInvitationResponse
	5,  // 28: pooltransactions.PoolTransactionsService.CreatePoolParticipant:output_type -> pooltransactions.CreatePoolParticipantResponse
	7,  // 29: pooltransactions.PoolTransactionsService.DeletePool:output_type -> pooltransactions.DeletePoolResponse
	10, // 30: pooltransactions.PoolTransactionsService.GetUserPools:output_type -> pooltransactions.GetUserPoolsResponse
	20, // 31: pooltransactions.PoolTransactionsService.GetPool:output_type -> pooltransactions.GetPoolResponse
	12, // 32: pooltransactions.PoolTransactionsService.RemovePoolParticipant:output_type -> pooltransactions.RemovePoolParticipantResponse
	14, // 33: pooltransactions.PoolTransactionsService.UpdatePool:output_type -> pooltransactions.UpdatePoolResponse
	22, // 34: pooltransactions.PoolTransactionsService.GetPoolBalance:output_type -> pooltransactions.GetPoolBalanceResponse
	20, // 35: pooltransactions.PoolTransactionsService.GetPoolOverview:output_type -> pooltransactions.GetPoolResponse
	26, // 36: pooltransactions.PoolTransactionsService.SendPaymentToUser:output_type -> pooltransactions.SendPaymentToUserResponse
	28, // 37: pooltransactions.PoolTransactionsService.SendPaymentToPool:output_type -> pooltransactions.SendPaymentToPoolResponse
	30, // 38: pooltransactions.PoolTransactionsService.GetUserAccountOverview:output_type -> pooltransactions.GetUserAccountOverviewResponse
	24, // 39: pooltransactions.PoolTransactionsService.GetUserBalance:output_type -> pooltransactions.GetUserBalanceResponse
	1,  // 40: pooltransactions.PoolTransactionsService.IsUserOwnerOfPool:output_type -> pooltransactions.IsUserOwnerOfPoolResponse
	26, // [26:41] is the sub-list for method output_type
	11, // [11:26] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_pkg_pb_pool_transactions_proto_init() }
func file_pkg_pb_pool_transactions_proto_init() {
	if File_pkg_pb_pool_transactions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_pb_pool_transactions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsUserOwnerOfPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsUserOwnerOfPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePoolInvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePoolInvitationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePoolParticipantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePoolParticipantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPoolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPoolsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePoolParticipantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePoolParticipantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Participant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoolBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoolBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPaymentToUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPaymentToUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPaymentToPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPaymentToPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAccountOverviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAccountOverviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalileoTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoolOverviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_pool_transactions_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoolOverviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_pb_pool_transactions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_pb_pool_transactions_proto_goTypes,
		DependencyIndexes: file_pkg_pb_pool_transactions_proto_depIdxs,
		MessageInfos:      file_pkg_pb_pool_transactions_proto_msgTypes,
	}.Build()
	File_pkg_pb_pool_transactions_proto = out.File
	file_pkg_pb_pool_transactions_proto_rawDesc = nil
	file_pkg_pb_pool_transactions_proto_goTypes = nil
	file_pkg_pb_pool_transactions_proto_depIdxs = nil
}
