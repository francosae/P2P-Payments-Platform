{
    "swagger": "2.0",
    "info": {
        "description": "This is the client facing API for Sharefunds/Quilt/PoolParty",
        "title": "Sharefunds Client Facing API",
        "contact": {},
        "version": "1.0.1"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login a user, validates client token with firebase and returns the client token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication Service"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "User to login",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_auth_routes.LoginRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_auth_pb.LoginResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user, creates an account in Firebase and a user in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication Service"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User to register",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_auth_routes.RegisterRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_auth_pb.RegisterResponse"
                        }
                    }
                }
            }
        },
        "/pool-transactions/pools/balance/{PoolID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches the balance of a pool, using the poolId.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool \u0026 Transactions Service - Pools"
                ],
                "summary": "Get pool balance.",
                "operationId": "get_pool_balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pool ID",
                        "name": "PoolID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.GetPoolBalanceResponse"
                        }
                    }
                }
            }
        },
        "/pool-transactions/pools/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new pool in the database, and creates a new account in Galileo for the pool, and adds the user as a participant in the pool.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool \u0026 Transactions Service - Pools"
                ],
                "summary": "Create a new pool",
                "operationId": "create_pool",
                "parameters": [
                    {
                        "description": "Pool to create",
                        "name": "Pool",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_pool-transactions_routes.CreatePoolRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.CreatePoolResponse"
                        }
                    }
                }
            }
        },
        "/pool-transactions/pools/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches all pools for a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool \u0026 Transactions Service"
                ],
                "summary": "Fetch all pools for a user.",
                "operationId": "get_user_pools",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.GetUserPoolsResponse"
                        }
                    }
                }
            }
        },
        "/pool-transactions/pools/overview/{PoolID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches the overview of a pool, including pool's balance, transactions, and transaction count.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool \u0026 Transactions Service - Pools"
                ],
                "summary": "Get Pool Overview.",
                "operationId": "get_pool_overview",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pool ID",
                        "name": "PoolID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.GetPoolOverviewResponse"
                        }
                    }
                }
            }
        },
        "/pool-transactions/pools/{PoolID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches pool data, using the poolId, user must be a participant in the pool.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool \u0026 Transactions Service - Pools"
                ],
                "summary": "Fetch pool data, including participants and transactions.",
                "operationId": "get_pool_data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pool ID",
                        "name": "PoolID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.GetPoolResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates pool information(name and/or description and/or goal).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool \u0026 Transactions Service - Pools"
                ],
                "summary": "Updates pool information.",
                "operationId": "update_pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pool ID",
                        "name": "PoolID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Pool to update",
                        "name": "Pool",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_pool-transactions_routes.UpdatePoolRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.UpdatePoolResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Sets Pool status to Inactive, Deactivates secondary account in galileo.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool \u0026 Transactions Service - Pools"
                ],
                "summary": "Delete Pool, deletes account in galileo.",
                "operationId": "delete_pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pool ID",
                        "name": "PoolID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.DeletePoolResponse"
                        }
                    }
                }
            }
        },
        "/pool-transactions/pools/{PoolID}/accept-invite": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Accepts pool invitation, using the poolId.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool \u0026 Transactions Service - Pools"
                ],
                "summary": "Creates ( accepts ) a pool participant , from an invitation.",
                "operationId": "create_pool_participant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pool ID",
                        "name": "PoolID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.CreatePoolParticipantResponse"
                        }
                    }
                }
            }
        },
        "/pool-transactions/pools/{PoolID}/create-invite": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a pool invitation for a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool \u0026 Transactions Service - Pools"
                ],
                "summary": "Create Pool Invitation, creates a pool invitation for a user.",
                "operationId": "create_pool_invitation",
                "parameters": [
                    {
                        "description": "User ID to invite",
                        "name": "Pool",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_pool-transactions_routes.CreatePoolInvitationRequestBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Pool ID",
                        "name": "PoolID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.CreatePoolInvitationResponse"
                        }
                    }
                }
            }
        },
        "/pool-transactions/pools/{PoolID}/remove-participant": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Removes a participant from a pool, using the poolId and participantId, user must be the owner of the pool.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool \u0026 Transactions Service - Pools"
                ],
                "summary": "Remove a participant from a pool.",
                "operationId": "remove_pool_participant",
                "parameters": [
                    {
                        "description": "User ID to remove from pool",
                        "name": "Pool",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_pool-transactions_routes.RemovePoolParticipantRequestBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Pool ID",
                        "name": "PoolID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.RemovePoolParticipantResponse"
                        }
                    }
                }
            }
        },
        "/pool-transactions/users/balance/{UserID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches the balance of a user, using the userId.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool \u0026 Transactions Service"
                ],
                "summary": "Get's user balance.",
                "operationId": "get_user_balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "UserID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.GetUserBalanceResponse"
                        }
                    }
                }
            }
        },
        "/pool-transactions/users/overview/{UserID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches the overview of a user's account, including user's balance, transactions, and transaction count.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool \u0026 Transactions Service"
                ],
                "summary": "Get User Account Overview.",
                "operationId": "get_user_account_overview",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "UserID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.GetUserAccountOverviewResponse"
                        }
                    }
                }
            }
        },
        "/pool-transactions/users/send-p2p-payment/{ReceiverID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Sends a P2P payment from one user to another, an internal account transfer via Galileo.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool \u0026 Transactions Service"
                ],
                "summary": "Create P2P Payment.",
                "operationId": "create_p2p_payment",
                "parameters": [
                    {
                        "description": "Payment information",
                        "name": "PaymentInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_pool-transactions_routes.CreateP2PPaymentRequestBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Receiver ID for payment",
                        "name": "ReceiverID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.SendPaymentToUserResponse"
                        }
                    }
                }
            }
        },
        "/pool-transactions/users/send-p2p-pool-payment/{PoolID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Sends a P2P payment from one user to a pool, an internal account transfer via Galileo.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool \u0026 Transactions Service"
                ],
                "summary": "Create P2P Payment to a pool.",
                "operationId": "create_p2p_pool_payment",
                "parameters": [
                    {
                        "description": "Payment information",
                        "name": "PaymentInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_pool-transactions_routes.CreateP2PPoolPaymentRequestBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Pool ID for payment",
                        "name": "PoolID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.SendPaymentToUserResponse"
                        }
                    }
                }
            }
        },
        "/user-compliance/plaid/create-accesstoken/{UID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Exchanges the public token for an access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User \u0026 Compliance Service - Plaid"
                ],
                "summary": "Creates an access token from the Plaid API.",
                "operationId": "create_access_token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "UID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Public Token to exchange for access token",
                        "name": "PublicToken",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_user-compliance_routes.CreateAccessTokenRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.CreatePlaidAccessTokenResponse"
                        }
                    }
                }
            }
        },
        "/user-compliance/plaid/create-idvtoken/{UID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a link token for the Identity Verification flow, which allows the user to verify their identity.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User \u0026 Compliance Service - Plaid"
                ],
                "summary": "Creates an Identity Verification Link Token from the Plaid API.",
                "operationId": "create_IDV_token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "UID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.CreatePlaidIDVTokenResponse"
                        }
                    }
                }
            }
        },
        "/user-compliance/plaid/create-linktoken/{UID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a link token from the Plaid API.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User \u0026 Compliance Service - Plaid"
                ],
                "summary": "Creates a link token from the Plaid API.",
                "operationId": "create_link_token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "UID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.CreatePlaidLinkTokenResponse"
                        }
                    }
                }
            }
        },
        "/user-compliance/users/create-account/{UID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a user's Galileo account, and account record within our user-compliance service DB with provided info, returns the Galileo account info (Create a new card program) and status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User \u0026 Compliance Service"
                ],
                "summary": "Create a user's digital wallet (galileo) account, and a record of the users info on the user-compliance service DB.",
                "operationId": "create_user_account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "UID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Body to create user account",
                        "name": "AccountInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_user-compliance_routes.CreateUserAccountRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.CreateUserAccountResponse"
                        }
                    }
                }
            }
        },
        "/user-compliance/users/create-user-record/{id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a user record on the user-compliance service DB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User \u0026 Compliance Service"
                ],
                "summary": "Creates a user record on the user-compliance service DB.",
                "operationId": "create_user_record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.CreateUserRecordResponse"
                        }
                    }
                }
            }
        },
        "/user-compliance/users/get-account-status/{UID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gets a boolean value indicating whether the user has completed the identity verification flow, and galileo account creation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User \u0026 Compliance Service"
                ],
                "summary": "Gets a user's account status, which is stored on the user-compliance service DB.",
                "operationId": "get_account_status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "UID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.GetAccountStatusResponse"
                        }
                    }
                }
            }
        },
        "/user-compliance/users/get-account/{UID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a user's account info stored on the user-compliance service DB. Does not make request to Galileo for user account info.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User \u0026 Compliance Service"
                ],
                "summary": "Retrieve a user's account info stored on the user-compliance service DB.",
                "operationId": "get_user_account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "UID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.GetUserAccountResponse"
                        }
                    }
                }
            }
        },
        "/user-compliance/users/set-verification-status/{UID}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Sets a boolean value indicating whether the user has completed the identity verification flow.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User \u0026 Compliance Service"
                ],
                "summary": "Sets a user's identity status, which is stored on the user-compliance service DB.",
                "operationId": "set_identity_status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "UID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Session ID of the link token",
                        "name": "LinkSessionId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_user-compliance_routes.SetIdentityStatusRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.SetIdentityVerifiedResponse"
                        }
                    }
                }
            }
        },
        "/user-compliance/users/update-account/{UID}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a user's account info on the user-compliance service DB with provided info, currently does not support updating ID or IDType. Does not update galileo account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User \u0026 Compliance Service"
                ],
                "summary": "Update a user's account info on the user-compliance service DB and the corresponding user account with Galileo.",
                "operationId": "update_user_account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "UID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Info to update user's account",
                        "name": "AccountInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_user-compliance_routes.UpdateUserAccountRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.UpdateUserAccountResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_Sharefunds_api-gateway_pkg_auth_pb.LoginResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_auth_pb.RegisterResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.CreatePoolInvitationResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "invitationId": {
                    "type": "string"
                },
                "inviteeId": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.CreatePoolParticipantResponse": {
            "type": "object",
            "properties": {
                "joinedAt": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "participantId": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.CreatePoolResponse": {
            "type": "object",
            "properties": {
                "balanceGoal": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string"
                },
                "poolname": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.DeletePoolResponse": {
            "type": "object",
            "properties": {
                "poolId": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.GalileoTransactions": {
            "type": "object",
            "properties": {
                "ach_transaction_id": {
                    "type": "string"
                },
                "act_id": {
                    "type": "string"
                },
                "act_type": {
                    "type": "string"
                },
                "amt": {
                    "type": "string"
                },
                "auth_ts": {
                    "type": "string"
                },
                "bal_id": {
                    "type": "string"
                },
                "billing_amt": {
                    "type": "string"
                },
                "billing_curr_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "external_trans_id": {
                    "type": "string"
                },
                "funding_account_prn": {
                    "type": "string"
                },
                "iac_tax": {
                    "type": "number"
                },
                "iva_tax": {
                    "type": "number"
                },
                "local_amt": {
                    "type": "string"
                },
                "local_curr_code": {
                    "type": "string"
                },
                "mcc": {
                    "type": "string"
                },
                "network_id": {
                    "type": "string"
                },
                "original_auth_id": {
                    "type": "string"
                },
                "pmt_ref_no": {
                    "type": "string"
                },
                "post_ts": {
                    "type": "string"
                },
                "prod_id": {
                    "type": "string"
                },
                "settle_amt": {
                    "type": "string"
                },
                "settle_curr_code": {
                    "type": "string"
                },
                "source_id": {
                    "type": "string"
                },
                "spending_account_prn": {
                    "type": "string"
                },
                "trans_code": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.GetPoolBalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.GetPoolOverviewResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "status": {
                    "type": "integer"
                },
                "transactionCount": {
                    "type": "integer"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.GalileoTransactions"
                    }
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.GetPoolResponse": {
            "type": "object",
            "properties": {
                "balanceGoal": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "participants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.Participant"
                    }
                },
                "poolId": {
                    "type": "string"
                },
                "poolname": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.Transaction"
                    }
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.GetUserAccountOverviewResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "status": {
                    "type": "integer"
                },
                "transactionCount": {
                    "type": "integer"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.GalileoTransactions"
                    }
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.GetUserBalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.GetUserPoolsResponse": {
            "type": "object",
            "properties": {
                "pools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.Pool"
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.Participant": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "joinedAt": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "participantId": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.Pool": {
            "type": "object",
            "properties": {
                "balanceGoal": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "participants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.Participant"
                    }
                },
                "poolId": {
                    "type": "string"
                },
                "poolname": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.Transaction"
                    }
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.RemovePoolParticipantResponse": {
            "type": "object",
            "properties": {
                "participantId": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.SendPaymentToUserResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "newBalance": {
                    "type": "number"
                },
                "oldBalance": {
                    "type": "number"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "createdAt": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "description": {
                    "type": "string"
                },
                "fromAccountId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "toAccountId": {
                    "type": "string"
                },
                "transactionId": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_pool-transactions_pb.UpdatePoolResponse": {
            "type": "object",
            "properties": {
                "balanceGoal": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "poolname": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.Account": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "mask": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "subtype": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "verification_status": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.Address": {
            "type": "object",
            "properties": {
                "address1": {
                    "type": "string"
                },
                "address2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.CreatePlaidAccessTokenResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.CreatePlaidIDVTokenResponse": {
            "type": "object",
            "properties": {
                "idvToken": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.CreatePlaidLinkTokenResponse": {
            "type": "object",
            "properties": {
                "linkToken": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.CreateUserAccountResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "galileoAccountDetails": {
                    "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.GalileoAccountDetails"
                },
                "galileoAccountStatus": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.CreateUserRecordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.GalileoAccountDetails": {
            "type": "object",
            "properties": {
                "cardId": {
                    "type": "string"
                },
                "cardNumber": {
                    "type": "string"
                },
                "cardSecurityCode": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.GalileoAccountInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.Address"
                },
                "message": {
                    "type": "string"
                },
                "personalInfo": {
                    "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.PersonalInfo"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.GetAccountStatusResponse": {
            "type": "object",
            "properties": {
                "GalileoAccountCreated": {
                    "type": "boolean"
                },
                "isVerified": {
                    "type": "boolean"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.GetUserAccountResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.Address"
                },
                "personalInfo": {
                    "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.PersonalInfo"
                },
                "userId": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.Institution": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.PersonalInfo": {
            "type": "object",
            "properties": {
                "dateOfBirth": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "idType": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.PlaidMetadata": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.Account"
                    }
                },
                "institution": {
                    "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.Institution"
                },
                "link_session_id": {
                    "type": "string"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.SetIdentityVerifiedResponse": {
            "type": "object",
            "properties": {
                "isVerified": {
                    "type": "boolean"
                }
            }
        },
        "github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.UpdateUserAccountResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "galileoAccountInfo": {
                    "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.GalileoAccountInfo"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pkg_auth_routes.LoginRequestBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "pkg_auth_routes.RegisterRequestBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "pkg_pool-transactions_routes.CreateP2PPaymentRequestBody": {
            "type": "object",
            "properties": {
                "Amount": {
                    "type": "number"
                },
                "Description": {
                    "type": "string"
                }
            }
        },
        "pkg_pool-transactions_routes.CreateP2PPoolPaymentRequestBody": {
            "type": "object",
            "properties": {
                "Amount": {
                    "type": "number"
                },
                "Description": {
                    "type": "string"
                }
            }
        },
        "pkg_pool-transactions_routes.CreatePoolInvitationRequestBody": {
            "type": "object",
            "properties": {
                "UserId": {
                    "type": "string"
                }
            }
        },
        "pkg_pool-transactions_routes.CreatePoolRequestBody": {
            "type": "object",
            "properties": {
                "Pool": {
                    "$ref": "#/definitions/pkg_pool-transactions_routes.Pool"
                }
            }
        },
        "pkg_pool-transactions_routes.Pool": {
            "type": "object",
            "properties": {
                "balanceGoal": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "poolName": {
                    "type": "string"
                }
            }
        },
        "pkg_pool-transactions_routes.RemovePoolParticipantRequestBody": {
            "type": "object",
            "properties": {
                "UserId": {
                    "type": "string"
                }
            }
        },
        "pkg_pool-transactions_routes.UpdatePoolRequestBody": {
            "type": "object",
            "properties": {
                "Pool": {
                    "$ref": "#/definitions/pkg_pool-transactions_routes.Pool"
                }
            }
        },
        "pkg_user-compliance_routes.Address": {
            "type": "object",
            "properties": {
                "address1": {
                    "type": "string"
                },
                "address2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "pkg_user-compliance_routes.CreateAccessTokenRequestBody": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/github_com_Sharefunds_api-gateway_pkg_user-compliance_pb.PlaidMetadata"
                },
                "publicToken": {
                    "type": "string"
                }
            }
        },
        "pkg_user-compliance_routes.CreateUserAccountRequestBody": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/pkg_user-compliance_routes.Address"
                },
                "personalInfo": {
                    "$ref": "#/definitions/pkg_user-compliance_routes.PersonalInfo"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "pkg_user-compliance_routes.PersonalInfo": {
            "type": "object",
            "properties": {
                "dateOfBirth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "idType": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "pkg_user-compliance_routes.SetIdentityStatusRequestBody": {
            "type": "object",
            "properties": {
                "link_session_id": {
                    "type": "string"
                }
            }
        },
        "pkg_user-compliance_routes.UpdateUserAccountRequestBody": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/pkg_user-compliance_routes.Address"
                },
                "personalInfo": {
                    "$ref": "#/definitions/pkg_user-compliance_routes.PersonalInfo"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "timestamppb.Timestamp": {
            "type": "object",
            "properties": {
                "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive.",
                    "type": "integer"
                },
                "seconds": {
                    "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}